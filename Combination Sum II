class Solution {
    public: 
    void findCombination(int ind, int target, vector<int> &arr, vector<vector<int>> &ans, vector<int>&ds) {
        if(target==0){ 
            ans.push_back(ds);
            return;
        }

        int prev=-1;
        for(int i=ind;i<arr.size();i++){
            if(arr[i]!=prev && arr[i]<=target){
                ds.push_back(arr[i]);
                findCombination(i+1,target-arr[i],arr,ans,ds);
                ds.pop_back();
                prev=arr[i];
            }
        }

        return;
    }
public:
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        sort(candidates.begin(), candidates.end());
        vector<vector<int>> ans; 
        vector<int> ds; 
        findCombination(0, target, candidates, ans, ds); 
        return ans; 
    }
};
