class Solution {
public:
    static int cmp(pair<string, int>& a, pair<string, int>& b)
        {
            if ((a.second > b.second) || (a.second == b.second && a.first < b.first))
                return 1;
            return 0;
        }
    vector<string> topKFrequent(vector<string>& w, int k) {
        map<string,int>mp;
        for(int i=0;i<w.size();i++){
            mp[w[i]]++;
        }
        vector<pair<string,int>>res;
        for(auto it:mp){
            // if(it.second==k){
                res.push_back({it.first,it.second});
            // }
        }
        sort(res.begin(),res.end(),cmp);
        vector<string>ans;
        int j=0;
        cout<<j;
        while(k--){
            ans.push_back(res[j].first);
            j++;
        }
        // sort(ans.begin(),ans.end());
        return ans;
    }
};
